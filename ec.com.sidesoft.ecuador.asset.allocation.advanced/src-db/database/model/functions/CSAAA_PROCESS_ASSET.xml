<?xml version="1.0"?>
  <database name="FUNCTION CSAAA_PROCESS_ASSET">
    <function name="CSAAA_PROCESS_ASSET" type="NULL">
      <parameter name="pinstance_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[TYPE RECORD IS REF CURSOR;
Cur_Parameter RECORD;  
  Cur_Assets RECORD;
  Cur_AssetActive RECORD;


  v_Client_ID VARCHAR2(32);
  v_Org_ID VARCHAR2(32);
  v_AD_User_ID VARCHAR2(32) ;
  
  v_ResultStr VARCHAR2(2000) := '';
  v_Record_ID VARCHAR2(32);
  v_ApplActiveID VARCHAR2(60);
  v_Ticket_ID VARCHAR2(32); 
  v_Period_ID VARCHAR2(32);   
  v_Concept_ID VARCHAR2(32);
  V_BPARTNER_ID VARCHAR2(60);
  v_payroll_type VARCHAR2(32);   
  
  v_n_insertions NUMBER;
  v_Message VARCHAR2(2000):='';

--  --valornull_exception  Exception;
  v_amount NUMBER;
  V_AMOUNT_CONCEP NUMBER;
  
  v_value NUMBER;

  v_isliquidation CHARACTER(1);       --OBTG:VARCHAR2--
  v_c_partner_id_payroll VARCHAR2(32);
BEGIN
  --  Update AD_PInstance
  DBMS_OUTPUT.PUT_LINE('Updating PInstance - Processing ' || PInstance_ID) ;
  v_ResultStr := 'PInstanceNotFound';
  AD_UPDATE_PINSTANCE(PInstance_ID, NULL, 'Y', NULL, NULL) ;

  BEGIN --BODY

    -- Get Parameters
    v_ResultStr := 'ReadingParameters';
    v_n_insertions := 0;
    
    FOR Cur_Parameter IN
      (SELECT i.Record_ID,
        i.AD_User_ID, 
        i.AD_Client_ID,
        i.AD_Org_ID                    
      FROM AD_PInstance i      
      WHERE i.AD_PInstance_ID = PInstance_ID      
      )
    LOOP

      v_Record_ID := Cur_Parameter.Record_ID;	
      v_AD_User_ID := Cur_Parameter.AD_User_ID;  
      
    END LOOP; -- Get Parameter


    FOR Cur_Assets IN(
	SELECT
	A_ASSET_ID
	,custodium_id
	,CIT.AD_ORG_ID
	,CIT.AD_CLIENT_ID
	FROM csaaa_invt_tkg_line citl 
	join csaaa_inventory_taking cit on cit.csaaa_inventory_taking_id = citl.csaaa_inventory_taking_id
	where citl.conciliation ='Y' 
	and citl.csaaa_inventory_taking_id = v_Record_ID
    )LOOP

	     FOR Cur_AssetActive IN(
		SELECT 
		ssal_appl_active_id
		FROM ssal_appl_active
		WHERE C_CUSTODIAN_ID = Cur_Assets.custodium_id AND A_ASSET_ID = Cur_Assets.A_ASSET_ID AND STATE='3' and EM_CSAAA_ISCONCILIATION='N'
	     )LOOP

	     v_ApplActiveID:=COALESCE(Cur_AssetActive.ssal_appl_active_id,TO_CHAR('ND'));

	     IF (v_ApplActiveID<>'ND') THEN

		     UPDATE SSAL_APPL_ACTIVE SET EM_CSAAA_ISCONCILIATION='Y' 
		     WHERE C_CUSTODIAN_ID = Cur_Assets.custodium_id AND A_ASSET_ID = Cur_Assets.A_ASSET_ID and EM_CSAAA_ISCONCILIATION='N'
		     AND  SSAL_APPL_ACTIVE_ID = v_ApplActiveID;

		     INSERT INTO csaaa_log_asset(
			    csaaa_log_asset_id, ad_client_id, ad_org_id, isactive, created, 
			    createdby, updated, updatedby, csaa_appl_active_id, date_conciliation)
		     VALUES (GET_UUID(), Cur_Assets.AD_CLIENT_ID, Cur_Assets.AD_ORG_ID, 'Y', NOW(), 
			    v_AD_User_ID, NOW(), v_AD_User_ID, v_ApplActiveID , NOW());
	     END IF;

	     END LOOP;

     

     END LOOP;	

     UPDATE csaaa_inventory_taking SET PROCESSED='Y' WHERE csaaa_inventory_taking_id = v_Record_ID;
    
    v_Message := '@RowsInserted@: ' || v_n_insertions || '.';
    DBMS_OUTPUT.PUT_LINE('Updating PInstance - Finished ' || v_Message) ;
    AD_UPDATE_PINSTANCE(PInstance_ID, NULL, 'N', 1, v_Message) ;
    RETURN;
    
  END; --BODY
  EXCEPTION
  WHEN OTHERS THEN
    v_ResultStr:= '@ERROR=' || SQLERRM;

    DBMS_OUTPUT.PUT_LINE(v_ResultStr) ;
    AD_UPDATE_PINSTANCE(PInstance_ID, NULL, 'N', 0, v_ResultStr) ;
    RETURN;
END CSAAA_PROCESS_ASSET
]]></body>
    </function>
  </database>
