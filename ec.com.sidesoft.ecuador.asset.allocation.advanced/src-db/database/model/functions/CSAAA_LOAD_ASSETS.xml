<?xml version="1.0"?>
  <database name="FUNCTION CSAAA_LOAD_ASSETS">
    <function name="CSAAA_LOAD_ASSETS" type="NULL">
      <parameter name="p_pinstance_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[-- Logistice
  v_ResultStr VARCHAR2(2000):='';
  v_Message VARCHAR2(2000):='';
  v_Result NUMBER:=1; -- 0=failure
  v_Record_ID VARCHAR2(32);
  v_AD_User_ID VARCHAR2(32):='0';
  v_PROCESSED VARCHAR2(60):='N';
  v_POSTED VARCHAR2(60):='Y';
  v_is_included NUMBER:=0;
  v_AD_Org_ID VARCHAR2(32);
  v_AD_Client_ID VARCHAR2(32);
  v_CustodiumID VARCHAR2(32);
  --  Parameter
  TYPE RECORD IS REF CURSOR;
    Cur_Parameter RECORD;
 
  BEGIN
    DBMS_OUTPUT.PUT_LINE('Updating PInstance - Processing ' || p_PInstance_ID) ;
    v_ResultStr:='PInstanceNotFound';
    AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'Y', NULL, NULL) ;
  BEGIN --BODY
    -- Get Parameters
    v_ResultStr:='ReadingParameters';
    FOR Cur_Parameter IN
      (SELECT i.Record_ID, i.AD_User_ID, p.ParameterName, p.P_String, p.P_Number, p.P_Date
      FROM AD_PInstance i
      LEFT JOIN AD_PInstance_Para p
        ON i.AD_PInstance_ID=p.AD_PInstance_ID
      WHERE i.AD_PInstance_ID=p_PInstance_ID
      ORDER BY p.SeqNo
      )
    LOOP
      v_Record_ID:=Cur_Parameter.Record_ID;
      v_AD_User_ID:=Cur_Parameter.AD_User_ID;
    END LOOP; -- Get Parameter

    SELECT COALESCE((SELECT
    custodium_id 
    FROM CSAAA_INVENTORY_TAKING WHERE CSAAA_INVENTORY_TAKING_ID = v_Record_ID),'ND')
    INTO v_CustodiumID
    FROM DUAL;

    IF (v_CustodiumID<>'ND') THEN

	SELECT COALESCE((SELECT
	AD_CLIENT_ID 
	FROM CSAAA_INVENTORY_TAKING WHERE CSAAA_INVENTORY_TAKING_ID = v_Record_ID),'ND')
	INTO v_AD_Client_ID
	FROM DUAL;

	SELECT COALESCE((SELECT
	AD_ORG_ID 
	FROM CSAAA_INVENTORY_TAKING WHERE CSAAA_INVENTORY_TAKING_ID = v_Record_ID),'ND')
	INTO v_AD_Org_ID
	FROM DUAL;


	INSERT INTO csaaa_invt_tkg_line(
		    csaaa_invt_tkg_line_id, ad_client_id, ad_org_id, isactive, created, 
		    createdby, updated, updatedby, line, a_asset_id, conciliation, 
		    barcode, csaaa_inventory_taking_id, building_id, unit_id, department_id, 
		    c_costcenter_id, user1_id, user2_id, a_asset_group_id, description)
	select 
	get_uuid() as inv_taking_id
	, v_AD_Client_ID as ad_client_id 
	, v_AD_Org_ID as ad_org_id
	, to_char('Y') as active
	, now() as created
	, v_AD_User_ID as createdby
	, now() as updated
	, v_AD_User_ID as updatedby
	, (ROW_NUMBER() OVER (ORDER BY sac.ssal_appl_active_id) * 10) AS line
	, sac.a_asset_id
	, to_char('N') as conciliation
	, aas.em_ssal_bar_code
	, v_Record_ID as csaaa_inventory_taking_id
	, sac.ssal_building_id 
	, sac.ssal_unit_id
	, sac.ssal_department_id
	, sac.c_costcenter_id
	, sac.user1_id
	, sac.user2_id
	, sac.a_asset_group_id
	, to_char('') as description
	from  ssal_appl_active  sac
	left join ssal_active_main  sam on sam.ssal_active_main_id = sac.ssal_active_main_id
	left join a_asset  aas on aas.a_asset_id = sac.a_asset_id 
	where aas.EM_Ssal_Custodio_ID = v_CustodiumID;
		
    END IF;
    
    v_Message:='Success';
    AD_UPDATE_PINSTANCE(p_PInstance_ID, v_AD_User_ID, 'N', 1, v_Message) ;

    -- Commented by cromero 19102006 COMMIT;
    RETURN;
  END; --BODY
EXCEPTION
WHEN OTHERS THEN
  v_ResultStr:= '@ERROR=' || SQLERRM;
  DBMS_OUTPUT.PUT_LINE(v_ResultStr) ;
  ROLLBACK;
  IF(p_PInstance_ID IS NOT NULL) THEN
    AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', 0, v_ResultStr) ;
  END IF;
--  RAISE_APPLICATION_ERROR(-20100, v_ResultStr) ;
--  RETURN;
END CSAAA_LOAD_ASSETS
]]></body>
    </function>
  </database>
