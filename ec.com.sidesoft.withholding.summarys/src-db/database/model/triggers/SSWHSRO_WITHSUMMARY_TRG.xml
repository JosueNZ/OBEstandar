<?xml version="1.0"?>
  <database name="TRIGGER SSWHSRO_WITHSUMMARY_TRG">
    <trigger name="SSWHSRO_WITHSUMMARY_TRG" table="SSWS_WITHHOLDINGSALELINE" fires="after" insert="true" update="true" delete="true" foreach="row">
      <body><![CDATA[
/*************************************************************************
* The contents of this file are subject to the Openbravo  Public  License
* Version  1.0  (the  "License"),  being   the  Mozilla   Public  License
* Version 1.1  with a permitted attribution clause; you may not  use this
* file except in compliance with the License. You  may  obtain  a copy of
* the License at http://www.openbravo.com/legal/license.html
* Software distributed under the License  is  distributed  on  an "AS IS"
* basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
* License for the specific  language  governing  rights  and  limitations
* under the License.
* The Original Code is Openbravo ERP.
* The Initial Developer of the Original Code is Openbravo SL
* All portions are Copyright (C) 2001-2006 Openbravo SL
* All Rights Reserved.
* Contributor(s):  ______________________________________.
************************************************************************/
v_withholdingsale_id varchar(32);
v_processed char(1);
v_counted NUMBER;
v_counted_sum NUMBER;
v_linenetamt NUMBER;
v_whrentalamt NUMBER;
v_lineivaamt NUMBER;
v_whivaamt NUMBER;
        
BEGIN
    
  IF AD_isTriggerEnabled()='N' THEN RETURN;
  END IF;

  
  IF INSERTING OR UPDATING THEN
  
  	Select SUM(sws.linenetamt)	, SUM(sws.whrentalamt)	, SUM(sws.lineivaamt)	, SUM(sws.whivaamt)	, COUNT(*)
		Into v_linenetamt		, v_whrentalamt			, v_lineivaamt			, v_whivaamt		, v_counted
	From ssws_withholdingsaleline sws
	Where sws.ssws_withholdingsale_id = :NEW.ssws_withholdingsale_id 
		And sws.c_tax_id = :NEW.c_tax_id;

	SELECT COUNT(*) 
	INTO v_counted_sum 
	FROM sswhsro_withholding_summary WHERE ssws_withholdingsale_id = :NEW.ssws_withholdingsale_id
    AND c_tax_id=:NEW.c_tax_id;

	If (COALESCE(v_counted, 0) > 1 OR coalesce(v_counted_sum,0)=1) Then
		update sswhsro_withholding_summary set linenetamt = COALESCE(v_linenetamt, 0)
			, whrentalamt = COALESCE(v_whrentalamt, 0)
			, lineivaamt = COALESCE(v_lineivaamt, 0)
			, whivaamt = COALESCE(v_whivaamt, 0)
		Where ssws_withholdingsale_id = :NEW.ssws_withholdingsale_id
			And c_tax_id = :NEW.c_tax_id;
	Else
		INSERT INTO sswhsro_withholding_summary(
			sswhsro_withholding_summary_id, ad_client_id, ad_org_id, createdby, updatedby
			, c_tax_id, ssws_withholdingsale_id, linenetamt, lineivaamt, whrentalamt
			, whivaamt
		) VALUES (get_uuid(), :NEW.ad_client_id, :NEW.ad_org_id, :NEW.createdby, :NEW.updatedby
		   	, :NEW.c_tax_id, :NEW.ssws_withholdingsale_id, :NEW.linenetamt, :NEW.lineivaamt, :NEW.whrentalamt
			, :NEW.whivaamt);
	End If;

  END IF;
  
  IF DELETING THEN
        Select SUM(sws.linenetamt), SUM(sws.whrentalamt), SUM(sws.lineivaamt), SUM(sws.whivaamt), COUNT(*)
			Into v_linenetamt, v_whrentalamt, v_lineivaamt, v_whivaamt, v_counted
		From ssws_withholdingsaleline sws
		Where ssws_withholdingsale_id = :OLD.ssws_withholdingsale_id 
			And sws.c_tax_id = :OLD.c_tax_id;
			
		If (COALESCE(v_linenetamt, 0) = 0 and COALESCE(v_whrentalamt, 0) = 0 and COALESCE(v_lineivaamt, 0) = 0 and COALESCE(v_whivaamt, 0) = 0) Then
			DELETE From sswhsro_withholding_summary 
				Where ssws_withholdingsale_id = :OLD.ssws_withholdingsale_id 
					And c_tax_id = :OLD.c_tax_id;
		Else 
			update sswhsro_withholding_summary set linenetamt = v_linenetamt
				, whrentalamt = v_whrentalamt
				, lineivaamt = v_lineivaamt
				, whivaamt = v_whivaamt
			Where ssws_withholdingsale_id = :OLD.ssws_withholdingsale_id
				And c_tax_id = :OLD.c_tax_id;
		End IF;
		
  END IF;

END SSWHSRO_WITHSUMMARY_TRG
]]></body>
    </trigger>
  </database>
