<?xml version="1.0"?>
  <database name="FUNCTION SRCC_CHANGUE_PRODUCTION_COSTS">
    <function name="SRCC_CHANGUE_PRODUCTION_COSTS" type="NULL">
      <parameter name="p_pinstance_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[v_ResultStr VARCHAR2(2000):='';
  v_Message VARCHAR2(2000):='';

  V_date_process DATE;
  V_cost_value NUMBER:= 0;
  V_date_total DATE;
  v_type_cost VARCHAR2(60):='N';
  v_script VARCHAR2(250);
  
  v_Record_ID VARCHAR2(32);
  v_Client_ID  VARCHAR2(32); 
  v_Org_ID   VARCHAR2(32); 
  v_User_ID  VARCHAR2(32); 

  TYPE RECORD IS REF CURSOR;
  Cur_Parameter RECORD;
  
  BEGIN
    --  Update AD_PInstance
    DBMS_OUTPUT.PUT_LINE('Updating PInstance - Processing ' || p_PInstance_ID) ;
    v_ResultStr:='PInstanceNotFound';
    AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'Y', NULL, NULL) ;
  BEGIN --BODY
    -- Get Parameters
    v_ResultStr:='ReadingParameters';
    FOR Cur_Parameter IN
      (SELECT i.Record_ID,
       i.ad_client_id, 
       i.ad_org_id,
        p.ParameterName,
        p.P_String,
        p.P_Number,
        p.P_Date,
        i.AD_User_ID
  
      FROM AD_PInstance i
      LEFT JOIN AD_PInstance_Para p
        ON i.AD_PInstance_ID=p.AD_PInstance_ID 
       
      WHERE i.AD_PInstance_ID=p_PInstance_ID
      ORDER BY p.SeqNo
      )
    LOOP
	  v_Record_ID:=Cur_Parameter.Record_ID;
	  v_Client_ID := Cur_Parameter.ad_client_id;
	  v_Org_ID    := Cur_Parameter.ad_org_id;
	  v_User_ID   := Cur_Parameter.AD_User_ID;  
      IF(Cur_Parameter.ParameterName='type_ch') THEN
        v_type_cost:=Cur_Parameter.P_String;
        DBMS_OUTPUT.PUT_LINE('  type_ch=' || V_date_process) ;
      END IF;
      IF(Cur_Parameter.ParameterName='percentage_change') THEN
        V_cost_value:=Cur_Parameter.P_Number;
        DBMS_OUTPUT.PUT_LINE('  percentage_change=' || V_cost_value) ;
      END IF;
    END LOOP; -- Get Parameter

   --  RAISE NO_DATA_FOUND || V_date_total ;
    DBMS_OUTPUT.PUT_LINE('  Record_ID=' || v_Record_ID) ;
    -- Read Information from Record
    v_ResultStr:='Reading Record';
    --INICIO
      

	--Check Eliminar costos de produccion		
    IF(v_type_cost='ci') THEN
		-- Actualiza transacciones Costos Indirectos, tabla ma_pl_ic
      UPDATE MA_Indirect_Cost_Value SET cost=(cost*V_cost_value);
    END IF;

	--Check Eliminar costos de produccion		
    IF(v_type_cost='mch') THEN
		-- Actualiza transacciones Maquinaria, tabla ma_pl_machine
      UPDATE MA_Machine_Cost SET cost=(cost*V_cost_value);
    END IF;

	--Check Eliminar costos de produccion		
    IF(v_type_cost='emp') THEN
      -- Actualiza transacciones Categoria Salarial, tabla ma_pl_employee
      UPDATE C_Salary_Category_Cost SET cost=(cost*V_cost_value);
    END IF;
    --FIN
    
    v_Message := 'Proceo finalizado';
    DBMS_OUTPUT.PUT_LINE('Updating PInstance - Finished ' || v_Message) ;
    AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', 1, v_Message) ;

    RETURN;
   
  END; --BODY
  EXCEPTION
  WHEN OTHERS THEN
    v_ResultStr:= '@ERROR=' || SQLERRM;

    DBMS_OUTPUT.PUT_LINE(v_ResultStr) ;
    AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', 0, v_ResultStr) ;
    RETURN;
END SRCC_CHANGUE_PRODUCTION_COSTS
]]></body>
    </function>
  </database>
