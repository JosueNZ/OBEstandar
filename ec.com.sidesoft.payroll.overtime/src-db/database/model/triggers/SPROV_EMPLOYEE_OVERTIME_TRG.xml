<?xml version="1.0"?>
  <database name="TRIGGER SPROV_EMPLOYEE_OVERTIME_TRG">
    <trigger name="SPROV_EMPLOYEE_OVERTIME_TRG" table="SPROV_EMPLOYEE_OVERTIME" fires="before" insert="true" update="true" delete="true" foreach="row">
      <body><![CDATA[BEGIN

	IF DELETING THEN
		If :OLD.processed_check = 'Y' Then
			RAISE_APPLICATION_ERROR(-20000, '@SPROV_CanNotDelete@');		
		End If;
	END IF; 

	IF INSERTING OR UPDATING THEN
		IF :NEW.entry_dial_1 IS NULL THEN :NEW.entry_dial_1 = TO_CHAR(:NEW.datemovement, 'yyyy-MM-dd')::TIMESTAMP; END IF;
		IF :NEW.chek_out_1 IS NULL THEN :NEW.chek_out_1 = TO_CHAR(:NEW.datemovement, 'yyyy-MM-dd')::TIMESTAMP; END IF;
		IF :NEW.entry_time_processed IS NULL THEN :NEW.entry_time_processed = TO_CHAR(:NEW.datemovement, 'yyyy-MM-dd')::TIMESTAMP; END IF;
		IF :NEW.output_time_processed IS NULL THEN :NEW.output_time_processed = TO_CHAR(:NEW.datemovement, 'yyyy-MM-dd')::TIMESTAMP; END IF;
		IF :NEW.worked_hour IS NULL THEN :NEW.worked_hour = TO_CHAR(:NEW.datemovement, 'yyyy-MM-dd')::TIMESTAMP; END IF;
		IF :NEW.early_dismissal_hours IS NULL THEN :NEW.early_dismissal_hours = TO_CHAR(:NEW.datemovement, 'yyyy-MM-dd')::TIMESTAMP; END IF;
		IF :NEW.delay_1 IS NULL THEN :NEW.delay_1 = TO_CHAR(:NEW.datemovement, 'yyyy-MM-dd')::TIMESTAMP; END IF;
		IF :NEW.authorized_time IS NULL THEN :NEW.authorized_time = TO_CHAR(:NEW.datemovement, 'yyyy-MM-dd')::TIMESTAMP; END IF;
		IF :NEW.generated_time IS NULL THEN :NEW.generated_time = TO_CHAR(:NEW.datemovement, 'yyyy-MM-dd')::TIMESTAMP; END IF;
		IF :NEW.time_25 IS NULL THEN :NEW.time_25 = TO_CHAR(:NEW.datemovement, 'yyyy-MM-dd')::TIMESTAMP; END IF;
		IF :NEW.time_50 IS NULL THEN :NEW.time_50 = TO_CHAR(:NEW.datemovement, 'yyyy-MM-dd')::TIMESTAMP; END IF;
		IF :NEW.time_100 IS NULL THEN :NEW.time_100 = TO_CHAR(:NEW.datemovement, 'yyyy-MM-dd')::TIMESTAMP; END IF;
		RETURN NEW;
        END IF;

END SPROV_EMPLOYEE_OVERTIME_TRG
]]></body>
    </trigger>
  </database>
